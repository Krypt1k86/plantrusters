{"version":3,"file":"static/webpack/static/development/pages/index.js.459f01f34987d51e502b.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import { NextPage } from \"next\";\nimport { ethers, Contract } from \"ethers\";\nimport Head from \"next/head\";\n\nfunction parseLogs(logs: ethers.providers.Log[], contract: Contract): any[] {\n  let iface = new ethers.utils.Interface(contract.interface.abi);\n  return logs\n    .map(log => iface.parseLog(log))\n    .map(item => {\n      let result = {\n        name: item.name,\n        signature: item.signature,\n        values: {}\n      };\n\n      const keys = Object.keys(item.values);\n      const values = Object.values(item.values);\n      const start = item.values.length;\n\n      for (let i = start; i < start * 2 - 1; i++) {\n        result.values[keys[i]] = values[i];\n      }\n\n      return result;\n    });\n}\n\nconst getAddresses = () => {\n  const provider = new ethers.providers.JsonRpcProvider(\n    \"https://mainnet.infura.io/v3/ab962fb32dfc49a8ab6ab72a6a318c85\"\n  );\n\n\n  const abi = [\n    {\n      constant: true,\n      inputs: [],\n      name: \"name\",\n      outputs: [{ name: \"\", type: \"string\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: \"_spender\", type: \"address\" },\n        { name: \"_amount\", type: \"uint256\" }\n      ],\n      name: \"approve\",\n      outputs: [{ name: \"success\", type: \"bool\" }],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"creationBlock\",\n      outputs: [{ name: \"\", type: \"uint256\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [{ name: \"\", type: \"uint256\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: \"_from\", type: \"address\" },\n        { name: \"_to\", type: \"address\" },\n        { name: \"_amount\", type: \"uint256\" }\n      ],\n      name: \"transferFrom\",\n      outputs: [{ name: \"success\", type: \"bool\" }],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"decimals\",\n      outputs: [{ name: \"\", type: \"uint8\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    },\n    {\n      constant: false,\n      inputs: [{ name: \"_newController\", type: \"address\" }],\n      name: \"changeController\",\n      outputs: [],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    },\n    {\n      constant: true,\n      inputs: [\n        { name: \"_owner\", type: \"address\" },\n        { name: \"_blockNumber\", type: \"uint256\" }\n      ],\n      name: \"balanceOfAt\",\n      outputs: [{ name: \"\", type: \"uint256\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"version\",\n      outputs: [{ name: \"\", type: \"string\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: \"_cloneTokenName\", type: \"string\" },\n        { name: \"_cloneDecimalUnits\", type: \"uint8\" },\n        { name: \"_cloneTokenSymbol\", type: \"string\" },\n        { name: \"_snapshotBlock\", type: \"uint256\" },\n        { name: \"_transfersEnabled\", type: \"bool\" }\n      ],\n      name: \"createCloneToken\",\n      outputs: [{ name: \"\", type: \"address\" }],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    },\n    {\n      constant: true,\n      inputs: [{ name: \"_owner\", type: \"address\" }],\n      name: \"balanceOf\",\n      outputs: [{ name: \"balance\", type: \"uint256\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"parentToken\",\n      outputs: [{ name: \"\", type: \"address\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: \"_owner\", type: \"address\" },\n        { name: \"_amount\", type: \"uint256\" }\n      ],\n      name: \"generateTokens\",\n      outputs: [{ name: \"\", type: \"bool\" }],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"symbol\",\n      outputs: [{ name: \"\", type: \"string\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    },\n    {\n      constant: true,\n      inputs: [{ name: \"_blockNumber\", type: \"uint256\" }],\n      name: \"totalSupplyAt\",\n      outputs: [{ name: \"\", type: \"uint256\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: \"_to\", type: \"address\" },\n        { name: \"_amount\", type: \"uint256\" }\n      ],\n      name: \"transfer\",\n      outputs: [{ name: \"success\", type: \"bool\" }],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"transfersEnabled\",\n      outputs: [{ name: \"\", type: \"bool\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"parentSnapShotBlock\",\n      outputs: [{ name: \"\", type: \"uint256\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: \"_spender\", type: \"address\" },\n        { name: \"_amount\", type: \"uint256\" },\n        { name: \"_extraData\", type: \"bytes\" }\n      ],\n      name: \"approveAndCall\",\n      outputs: [{ name: \"success\", type: \"bool\" }],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: \"_owner\", type: \"address\" },\n        { name: \"_amount\", type: \"uint256\" }\n      ],\n      name: \"destroyTokens\",\n      outputs: [{ name: \"\", type: \"bool\" }],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    },\n    {\n      constant: true,\n      inputs: [\n        { name: \"_owner\", type: \"address\" },\n        { name: \"_spender\", type: \"address\" }\n      ],\n      name: \"allowance\",\n      outputs: [{ name: \"remaining\", type: \"uint256\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    },\n    {\n      constant: false,\n      inputs: [{ name: \"_token\", type: \"address\" }],\n      name: \"claimTokens\",\n      outputs: [],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"tokenFactory\",\n      outputs: [{ name: \"\", type: \"address\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    },\n    {\n      constant: false,\n      inputs: [{ name: \"_transfersEnabled\", type: \"bool\" }],\n      name: \"enableTransfers\",\n      outputs: [],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"controller\",\n      outputs: [{ name: \"\", type: \"address\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    },\n    {\n      inputs: [\n        { name: \"_tokenFactory\", type: \"address\" },\n        { name: \"_parentToken\", type: \"address\" },\n        { name: \"_parentSnapShotBlock\", type: \"uint256\" },\n        { name: \"_tokenName\", type: \"string\" },\n        { name: \"_decimalUnits\", type: \"uint8\" },\n        { name: \"_tokenSymbol\", type: \"string\" },\n        { name: \"_transfersEnabled\", type: \"bool\" }\n      ],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"constructor\"\n    },\n    { payable: true, stateMutability: \"payable\", type: \"fallback\" },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: true, name: \"_token\", type: \"address\" },\n        { indexed: true, name: \"_controller\", type: \"address\" },\n        { indexed: false, name: \"_amount\", type: \"uint256\" }\n      ],\n      name: \"ClaimedTokens\",\n      type: \"event\"\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: true, name: \"_from\", type: \"address\" },\n        { indexed: true, name: \"_to\", type: \"address\" },\n        { indexed: false, name: \"_amount\", type: \"uint256\" }\n      ],\n      name: \"Transfer\",\n      type: \"event\"\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: true, name: \"_cloneToken\", type: \"address\" },\n        { indexed: false, name: \"_snapshotBlock\", type: \"uint256\" }\n      ],\n      name: \"NewCloneToken\",\n      type: \"event\"\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: true, name: \"_owner\", type: \"address\" },\n        { indexed: true, name: \"_spender\", type: \"address\" },\n        { indexed: false, name: \"_amount\", type: \"uint256\" }\n      ],\n      name: \"Approval\",\n      type: \"event\"\n    }\n  ];\n\n  let contractAddress = \"0xD275B1550E8ca8Da84c552ACa9313Ec4a5B9bD07\";\n\n  let contract = new ethers.Contract(contractAddress, abi, provider);\n\n  // let Transfer = contract.filters.Transfer()\n  // let topics = Transfer.topics ? Transfer.topics[0] : \"\"\n\n  let filter = {\n    address: contractAddress,\n    fromBlock: 8960961, // Block of Contract's first transaction\n    toBlock: \"latest\",\n    topics: []\n  };\n\n  return provider.getLogs(filter).then(result => {\n    const logs = parseLogs(result, contract);\n\n    const addresses: string[] = logs.map(function(log) {\n      return log.values[\"_to\"] + \"\\n\";\n    });\n\n    return addresses;\n  });\n};\n\nconst Home: NextPage<{ addresses: string[] }> = ({ addresses }) => {\n  const listItems = addresses.map(address => <li>{address}</li>);\n\n  return (\n    <div>\n      <Head>\n        <title>DAOSCIPLES</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n      </Head>\n      <h1>$AINT TOKEN HOLDERS</h1>\n      <ul>{listItems}</ul>\n    </div>\n  );\n};\n\nHome.getInitialProps = async ({ req }) => {\n  const addresses = await getAddresses();\n\n  return { addresses };\n};\n\n//export default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAXA;AAcA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAbA;AAgBA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAXA;AAcA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAVA;AAaA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAUA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAZA;AAcA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AARA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AARA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAPA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AARA;AAYA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAJA;AAOA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAGA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}