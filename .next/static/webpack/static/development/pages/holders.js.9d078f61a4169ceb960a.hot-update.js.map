{"version":3,"file":"static/webpack/static/development/pages/holders.js.9d078f61a4169ceb960a.hot-update.js","sources":["webpack:///./components/Layout.tsx","webpack:///./node_modules/array-equal/index.js","webpack:///./node_modules/image-exists/index.js","webpack:///./node_modules/is-retina/index.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/react-retina-image/dist/index.js"],"sourcesContent":["import * as React from 'react'\nimport Navigation from './Navigation'\nimport Head from 'next/head'\nvar RetinaImage = require('react-retina-image')\n\ntype LayoutProps = {\n    title?: string\n}\n\nconst Layout: React.FunctionComponent<LayoutProps> = ({ children, title }) => (\n    <div>\n        <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"//fonts.googleapis.com/css?family=Tenor+Sans\"\n        />\n        <Head>\n            <title>SAINT FAME</title>\n            <meta\n                name=\"viewport\"\n                content=\"initial-scale=1.0, width=device-width\"\n            />\n        </Head>\n        <Navigation />\n        <RetinaImage src={require('./logo.png')} />\n        {children}\n        <style global jsx>{`\n            body {\n                background: black;\n                color: #fff;\n            }\n            a {\n                font-family: Tenor Sans;\n                font-style: normal;\n                font-weight: normal;\n                font-size: 25px;\n                line-height: 40px;\n\n                color: #fffafa;\n            }\n            h1 {\n                color: #fff;\n            }\n        `}</style>\n    </div>\n)\nexport default Layout\n","\nmodule.exports = function equal(arr1, arr2) {\n  var length = arr1.length\n  if (length !== arr2.length) return false\n  for (var i = 0; i < length; i++)\n    if (arr1[i] !== arr2[i])\n      return false\n  return true\n}\n","var checks = {};\n\nmodule.exports = function(src, callback) {\n  if (src in checks) {\n    return callback(checks[src]);\n  }\n\n  var img = new Image();\n\n  img.onload = function() {\n    checks[src] = true;\n    callback(true);\n  };\n\n  img.onerror = function() {\n    checks[src] = false;\n    callback(false);\n  };\n\n  img.src = src;\n};\n","module.exports = function() {\n  var mediaQuery;\n  if (typeof window !== \"undefined\" && window !== null) {\n    mediaQuery = \"(-webkit-min-device-pixel-ratio: 1.25), (min--moz-device-pixel-ratio: 1.25), (-o-min-device-pixel-ratio: 5/4), (min-resolution: 1.25dppx)\";\n    if (window.devicePixelRatio > 1.25) {\n      return true;\n    }\n    if (window.matchMedia && window.matchMedia(mediaQuery).matches) {\n      return true;\n    }\n  }\n  return false;\n};\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// Generated by CoffeeScript 1.12.5\nvar PropTypes, React, RetinaImage, arrayEqual, assign, imageExists, isRetina, path,\n  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nReact = require('react');\n\nPropTypes = require('prop-types');\n\nisRetina = require('is-retina');\n\nimageExists = require('image-exists');\n\npath = require('path');\n\nassign = require('object-assign');\n\narrayEqual = require('array-equal');\n\nmodule.exports = RetinaImage = (function(superClass) {\n  extend(RetinaImage, superClass);\n\n  RetinaImage.propTypes = {\n    src: PropTypes.oneOfType([PropTypes.string, PropTypes.array]).isRequired,\n    checkIfRetinaImgExists: PropTypes.bool,\n    forceOriginalDimensions: PropTypes.bool,\n    retinaImageSuffix: PropTypes.string,\n    handleOnLoad: PropTypes.func,\n    onLoad: PropTypes.func,\n    onError: PropTypes.func\n  };\n\n  RetinaImage.defaultProps = {\n    checkIfRetinaImgExists: true,\n    forceOriginalDimensions: true,\n    retinaImageSuffix: '@2x',\n    onError: function() {}\n  };\n\n  function RetinaImage(props) {\n    this.handleOnLoad = bind(this.handleOnLoad, this);\n    RetinaImage.__super__.constructor.call(this, props);\n    this.state = this.wrangleProps();\n  }\n\n  RetinaImage.prototype.componentWillReceiveProps = function(nextProps) {\n    var isEqual;\n    isEqual = true;\n    if (Array.isArray(this.props.src) && Array.isArray(nextProps.src)) {\n      isEqual = arrayEqual(this.props.src, nextProps.src);\n    } else {\n      isEqual = this.props.src === nextProps.src;\n    }\n    if (!isEqual) {\n      return this.setState(assign(this.wrangleProps(nextProps), {\n        width: null,\n        height: null,\n        imgLoaded: null,\n        retinaImgExists: null,\n        retinaCheckComplete: null\n      }));\n    }\n  };\n\n  RetinaImage.prototype.componentDidMount = function() {\n    this.checkForRetina();\n    return this.checkLoaded();\n  };\n\n  RetinaImage.prototype.componentDidUpdate = function() {\n    return this.checkForRetina();\n  };\n\n  RetinaImage.prototype.render = function() {\n    var imgProps;\n    imgProps = assign({}, this.props);\n    delete imgProps.src;\n    delete imgProps.checkIfRetinaImgExists;\n    delete imgProps.forceOriginalDimensions;\n    delete imgProps.retinaImageSuffix;\n    delete imgProps.handleOnLoad;\n    delete imgProps.onLoad;\n    delete imgProps.onError;\n    imgProps.src = this.state.src;\n    imgProps.onLoad = this.handleOnLoad;\n    imgProps.onError = this.props.onError;\n    if (this.state.width >= 0) {\n      imgProps.width = this.state.width;\n    }\n    if (this.state.height >= 0) {\n      imgProps.height = this.state.height;\n    }\n    return React.createElement(\"img\", Object.assign({}, imgProps, {\n      \"ref\": \"img\"\n    }));\n  };\n\n  RetinaImage.prototype.wrangleProps = function(props) {\n    if (props == null) {\n      props = this.props;\n    }\n    if (Array.isArray(props.src)) {\n      return {\n        src: props.src[0],\n        srcIsArray: true\n      };\n    } else {\n      return {\n        src: props.src,\n        srcIsArray: false\n      };\n    }\n  };\n\n  RetinaImage.prototype.checkForRetina = function() {\n    if (this.state.retinaCheckComplete) {\n      return;\n    }\n    if (isRetina() && this.props.checkIfRetinaImgExists) {\n      return imageExists(this.getRetinaPath(), (function(_this) {\n        return function(exists) {\n          var ref;\n          if (exists && ((ref = _this.state) != null ? ref.imgLoaded : void 0)) {\n            _this.setState({\n              src: _this.getRetinaPath()\n            });\n          } else if (exists) {\n            _this.setState({\n              retinaImgExists: true\n            });\n          }\n          return _this.setState({\n            retinaCheckComplete: true\n          });\n        };\n      })(this));\n    } else if (isRetina() && !this.props.checkIfRetinaImgExists) {\n      this.setState({\n        src: this.getRetinaPath()\n      });\n      return this.setState({\n        retinaCheckComplete: true\n      });\n    }\n  };\n\n  RetinaImage.prototype.checkLoaded = function() {\n    var el;\n    el = this.refs.img;\n    if (!el.complete) {\n      return false;\n    }\n    if (el.naturalWidth === 0) {\n      return false;\n    }\n    return this.handleOnLoad();\n  };\n\n  RetinaImage.prototype.handleOnLoad = function(e) {\n    var ref;\n    if (this.props.onLoad != null) {\n      this.props.onLoad(e);\n    }\n    if (this.props.handleOnLoad != null) {\n      this.props.handleOnLoad(e);\n    }\n    if (this.props.forceOriginalDimensions) {\n      this.setState({\n        width: this.refs.img.clientWidth,\n        height: this.refs.img.clientHeight\n      });\n    }\n    this.setState({\n      imgLoaded: true\n    });\n    if (((ref = this.state) != null ? ref.retinaImgExists : void 0) || !this.props.checkIfRetinaImgExists) {\n      return this.setState({\n        src: this.getRetinaPath()\n      });\n    }\n  };\n\n  RetinaImage.prototype.getRetinaPath = function() {\n    var basename, src;\n    if (this.state.srcIsArray) {\n      return this.props.src[1];\n    } else {\n      basename = path.basename(this.props.src, path.extname(this.props.src));\n      basename = basename + this.props.retinaImageSuffix + path.extname(this.props.src);\n      src = this.props.src.replace(path.basename(this.props.src), basename);\n      return src;\n    }\n  };\n\n  return RetinaImage;\n\n})(React.Component);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAAA;AAAA;AADA;AACA;AAoCA;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}