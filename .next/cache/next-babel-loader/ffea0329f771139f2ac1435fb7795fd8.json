{"ast":null,"code":"var _jsxFileName = \"/Users/davidhovey/SaintFame/Site/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { ethers } from 'ethers';\n\nconst test = async () => {\n  const provider = new ethers.providers.JsonRpcProvider('https://mainnet.infura.io/v3/ab962fb32dfc49a8ab6ab72a6a318c85');\n  let contractAddress = \"0xD275B1550E8ca8Da84c552ACa9313Ec4a5B9bD07\";\n  let filter = {\n    address: contractAddress,\n    fromBlock: 0,\n    toBlock: \"latest\",\n    topics: []\n  };\n  provider.getLogs(filter).then(result => {\n    console.log(\"result \", result); // [ {\n    //    blockNumber: 3313426,\n    //    blockHash: \"0xe01c1e437ed3af9061006492cb07454eca8561479454a709809b7897f225387d\",\n    //    transactionIndex: 5,\n    //    removed: false,\n    //    address: \"0x6fC21092DA55B392b045eD78F4732bff3C580e2c\",\n    //    data: \"0x00000000000000000000000053095760c154a1531a69fc718119d14c4aa1506f\" +\n    //            \"000000000000000000000000000000000000000000000000016345785d8a0000\",\n    //    topics: [\n    //      \"0x179ef3319e6587f6efd3157b34c8b357141528074bcb03f9903589876168fa14\",\n    //      \"0xe625ed7b108857745d1d9889a7ae05861d8aee38e0e92fd3a31191de01c2515b\"\n    //    ],\n    //    transactionHash: \"0x61d641aaf3dcf4cf6bafc3e79d332d8773ea0688f87eb00f8b60c3f0050e55f0\",\n    //    logIndex: 5\n    // } ]\n  }); // let number = await provider.getBlockNumber()\n  // let etherscanProvider = new ethers.providers.EtherscanProvider();\n  // var Transfer = contract.interface.events.Transfer\n  // etherscanProvider.perform(\"getLogs\", { topic: Transfer.topic, address: myAddress, fromBlock: 10000, toBlock: number} ).then((history) => {\n  //   console.log(\"history\", history);\n  // });\n  // etherscanProvider.getHistory(myAddress, Transfer).then((history) => {\n  //   console.log(\"history\", history);\n  //     history.forEach((tx) => {\n  //         console.log(\"scan\", tx);\n  //     })\n  // });\n  // console.log('contract ',  contract.address);\n  // console.log('contract ',  contract.functions);\n  // let filterToMe = contract.filters.Transfer(null, \"0x7bb81632c66cfaf0c9c7aa2dbabf21fbc036d013\");\n  // let logs = await provider.getLogs(filterToMe);\n  // console.log('logs ',  logs);\n  // console.log('derp');\n  // provider.getBalance(address).then((balance) => {\n  //     // balance is a BigNumber (in wei); format is as a sting (in ether)\n  //     let etherString = ethers.utils.formatEther(balance);\n  //     console.log(\"etherString = \", etherString)\n  // });\n};\n\nconst Home = ({\n  userAgent\n}) => {\n  test();\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Hello world! - user agent: \", userAgent);\n};\n\nHome.getInitialProps = async ({\n  req\n}) => {\n  const userAgent = req ? req.headers['user-agent'] || '' : navigator.userAgent;\n  return {\n    userAgent\n  };\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/davidhovey/SaintFame/Site/pages/index.tsx"],"names":["ethers","test","provider","providers","JsonRpcProvider","contractAddress","filter","address","fromBlock","toBlock","topics","getLogs","then","result","console","log","Home","userAgent","getInitialProps","req","headers","navigator"],"mappings":";;;AACA,SAASA,MAAT,QAAuB,QAAvB;;AAEA,MAAMC,IAAI,GAAG,YAAY;AAEzB,QAAMC,QAAQ,GAAG,IAAIF,MAAM,CAACG,SAAP,CAAiBC,eAArB,CAAqC,+DAArC,CAAjB;AAEA,MAAIC,eAAe,GAAG,4CAAtB;AAEA,MAAIC,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAEF,eADA;AAETG,IAAAA,SAAS,EAAE,CAFF;AAGTC,IAAAA,OAAO,EAAE,QAHA;AAITC,IAAAA,MAAM,EAAE;AAJC,GAAb;AAOAR,EAAAA,QAAQ,CAACS,OAAT,CAAiBL,MAAjB,EAAyBM,IAAzB,CAA+BC,MAAD,IAAY;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB,EADsC,CAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,GAlBD,EAbyB,CAkCzB;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAGA;AACC,CA5ED;;AA8EA,MAAMG,IAAqC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAC/DhB,EAAAA,IAAI;AACJ,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAgCgB,SAAhC,CADF;AAGD,CALD;;AAOAD,IAAI,CAACE,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACxC,QAAMF,SAAS,GAAGE,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,YAAZ,KAA6B,EAAhC,GAAqCC,SAAS,CAACJ,SAApE;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAeD,IAAf","sourcesContent":["import { NextPage } from 'next';\nimport { ethers } from 'ethers';\n\nconst test = async () => {\n\nconst provider = new ethers.providers.JsonRpcProvider('https://mainnet.infura.io/v3/ab962fb32dfc49a8ab6ab72a6a318c85')\n\nlet contractAddress = \"0xD275B1550E8ca8Da84c552ACa9313Ec4a5B9bD07\";\n\nlet filter = {\n    address: contractAddress,\n    fromBlock: 0,\n    toBlock: \"latest\",\n    topics: [ ]\n}\n\nprovider.getLogs(filter).then((result) => {\n    console.log(\"result \", result);\n    // [ {\n    //    blockNumber: 3313426,\n    //    blockHash: \"0xe01c1e437ed3af9061006492cb07454eca8561479454a709809b7897f225387d\",\n    //    transactionIndex: 5,\n    //    removed: false,\n    //    address: \"0x6fC21092DA55B392b045eD78F4732bff3C580e2c\",\n    //    data: \"0x00000000000000000000000053095760c154a1531a69fc718119d14c4aa1506f\" +\n    //            \"000000000000000000000000000000000000000000000000016345785d8a0000\",\n    //    topics: [\n    //      \"0x179ef3319e6587f6efd3157b34c8b357141528074bcb03f9903589876168fa14\",\n    //      \"0xe625ed7b108857745d1d9889a7ae05861d8aee38e0e92fd3a31191de01c2515b\"\n    //    ],\n    //    transactionHash: \"0x61d641aaf3dcf4cf6bafc3e79d332d8773ea0688f87eb00f8b60c3f0050e55f0\",\n    //    logIndex: 5\n    // } ]\n\n});\n\n\n// let number = await provider.getBlockNumber()\n\n// let etherscanProvider = new ethers.providers.EtherscanProvider();\n\n// var Transfer = contract.interface.events.Transfer\n\n// etherscanProvider.perform(\"getLogs\", { topic: Transfer.topic, address: myAddress, fromBlock: 10000, toBlock: number} ).then((history) => {\n//   console.log(\"history\", history);\n   \n// });\n\n// etherscanProvider.getHistory(myAddress, Transfer).then((history) => {\n//   console.log(\"history\", history);\n//     history.forEach((tx) => {\n//         console.log(\"scan\", tx);\n//     })\n// });\n\n\n\n\n\n\n// console.log('contract ',  contract.address);\n// console.log('contract ',  contract.functions);\n\n// let filterToMe = contract.filters.Transfer(null, \"0x7bb81632c66cfaf0c9c7aa2dbabf21fbc036d013\");\n\n// let logs = await provider.getLogs(filterToMe);\n\n// console.log('logs ',  logs);\n\n// console.log('derp');\n\n// provider.getBalance(address).then((balance) => {\n\n//     // balance is a BigNumber (in wei); format is as a sting (in ether)\n//     let etherString = ethers.utils.formatEther(balance);\n//     console.log(\"etherString = \", etherString)\n    \n    \n// });\n}\n\nconst Home: NextPage<{ userAgent: string }> = ({ userAgent }) => {\n  test()\n  return (\n    <h1>Hello world! - user agent: {userAgent}</h1>\n  )\n};\n\nHome.getInitialProps = async ({ req }) => {\n  const userAgent = req ? req.headers['user-agent'] || '' : navigator.userAgent;\n  return { userAgent };\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}