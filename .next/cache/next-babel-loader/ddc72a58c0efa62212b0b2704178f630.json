{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/Users/davidhovey/SaintFame/Site/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { ethers } from 'ethers';\n\nfunction parseLogs(logs) {\n  var iface = new ethers.utils.Interface(new CardsFactory()[\"interface\"].abi);\n  return logs.map(function (log) {\n    return iface.parseLog(log);\n  }).map(function (item) {\n    var result = {\n      name: item.name,\n      signature: item.signature,\n      values: {}\n    };\n\n    var keys = _Object$keys(item.values);\n\n    var values = _Object$values(item.values);\n\n    var start = item.values.length;\n\n    for (var i = start; i < start * 2 - 1; i++) {\n      result.values[keys[i]] = values[i];\n    }\n\n    return result;\n  });\n}\n\nvar test =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var provider, contractAddress, topic, filter;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            provider = new ethers.providers.JsonRpcProvider('https://mainnet.infura.io/v3/ab962fb32dfc49a8ab6ab72a6a318c85');\n            contractAddress = \"0xD275B1550E8ca8Da84c552ACa9313Ec4a5B9bD07\";\n            topic = ethers.utils.id(\"transferFrom(address,address)\");\n            filter = {\n              address: contractAddress,\n              fromBlock: 8960961,\n              toBlock: \"latest\",\n              topics: [topic]\n            };\n            provider.getLogs(filter).then(function (result) {\n              console.log(\"result \", result);\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = _getIterator(result), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var _entry = _step.value;\n                  console.log(\"entry \", _entry);\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                    _iterator[\"return\"]();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function test() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar Home = function Home(_ref2) {\n  var userAgent = _ref2.userAgent;\n  test();\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Hello world! - user agent: \", userAgent);\n};\n\nHome.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(_ref3) {\n    var req, userAgent;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            req = _ref3.req;\n            userAgent = req ? req.headers['user-agent'] || '' : navigator.userAgent;\n            return _context2.abrupt(\"return\", {\n              userAgent: userAgent\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexport default Home; // 7BB81632c66cfAf0c9c7aA2DBaBf21FBC036D013\n// \"0x0000000000000000000000007bb81632c66cfaf0c9c7aa2dbabf21fbc036d013\"\n\nentry;","map":{"version":3,"sources":["/Users/davidhovey/SaintFame/Site/pages/index.tsx"],"names":["ethers","parseLogs","logs","iface","utils","Interface","CardsFactory","abi","map","log","parseLog","item","result","name","signature","values","keys","start","length","i","test","provider","providers","JsonRpcProvider","contractAddress","topic","id","filter","address","fromBlock","toBlock","topics","getLogs","then","console","entry","Home","userAgent","getInitialProps","req","headers","navigator"],"mappings":"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","sourcesContent":["import { NextPage } from 'next';\nimport { ethers } from 'ethers';\n\nfunction parseLogs(logs: ethers.providers.Log[]): any[] {\n  let iface = new ethers.utils.Interface(new CardsFactory().interface.abi);\n  return logs.map((log) => iface.parseLog(log)).map(item => {\n      let result = {\n          name: item.name,\n          signature: item.signature,\n          values: {}\n      };\n\n      const keys = Object.keys(item.values);\n      const values = Object.values(item.values);\n      const start = item.values.length;\n\n      for (let i = start; i < (start * 2) - 1; i++) {\n          result.values[keys[i]] = values[i];\n      }\n\n      return result;\n  });\n}\n\nconst test = async () => {\n\nconst provider = new ethers.providers.JsonRpcProvider('https://mainnet.infura.io/v3/ab962fb32dfc49a8ab6ab72a6a318c85')\n\nlet contractAddress = \"0xD275B1550E8ca8Da84c552ACa9313Ec4a5B9bD07\";\n\nlet topic = ethers.utils.id(\"transferFrom(address,address)\");\n\nlet filter = {\n    address: contractAddress,\n    fromBlock: 8960961,\n    toBlock: \"latest\",\n    topics: [ topic ]\n}\n\nprovider.getLogs(filter).then((result) => {\n    console.log(\"result \", result);\n\n    for (let entry of result) {\n      \n      console.log(\"entry \", entry)\n  }\n});\n}\n\nconst Home: NextPage<{ userAgent: string }> = ({ userAgent }) => {\n  test()\n  return (\n    <h1>Hello world! - user agent: {userAgent}</h1>\n  )\n};\n\nHome.getInitialProps = async ({ req }) => {\n  const userAgent = req ? req.headers['user-agent'] || '' : navigator.userAgent;\n  return { userAgent };\n};\n\nexport default Home;\n\n// 7BB81632c66cfAf0c9c7aA2DBaBf21FBC036D013\n// \"0x0000000000000000000000007bb81632c66cfaf0c9c7aa2dbabf21fbc036d013\"\n\nentry"]},"metadata":{},"sourceType":"module"}