{"version":3,"file":"static/development/pages/finances.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/finances.tsx","webpack:///external \"axios\"","webpack:///external \"ethers\"","webpack:///external \"next/head\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import { NextPage } from 'next'\nimport { ethers, Contract } from 'ethers'\nimport Head from 'next/head'\nimport axios from 'axios'\n\nconst API_KEY = 'X3SIP83C2DJ8VRBYIF9NSUKRBRGHI6DX22'\nconst DAO = '0xf739c4d15854cab9874e24a4d1ec084dcaf1f13f'\n\nlet FINANCES_ENDPOINT = `http://api.etherscan.io/api?module=account&action=tokentx&address=${DAO}&startblock=8972891&endblock=latest&sort=asc&apikey=${API_KEY}`\n\nconst provider = new ethers.providers.EtherscanProvider('mainnet', API_KEY)\n\n// prettier-ignore\nconst financeContractABI = [{\"constant\":true,\"inputs\":[],\"name\":\"proxyType\",\"outputs\":[{\"name\":\"proxyTypeId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isDepositable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"appId\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kernel\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_kernel\",\"type\":\"address\"},{\"name\":\"_appId\",\"type\":\"bytes32\"},{\"name\":\"_initializePayload\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ProxyDeposit\",\"type\":\"event\"}]\n\nlet financeAddress = '0xf739C4d15854CaB9874E24a4D1Ec084DCAF1F13F'\n\nlet financeContract = new ethers.Contract(\n    financeAddress,\n    financeContractABI,\n    new ethers.providers.JsonRpcProvider()\n)\n\ninterface Transfer {\n    time: string\n    amount: string\n    reference: string\n    address: string\n}\n\ninterface ParsedTransfer {\n    time: string\n    amount: string\n    hash: string\n}\n\ninterface InputData {\n    reference: string\n    fromAddress: string\n}\n\nconst getFinanceTransactions = async (\n    transactionHash: string\n): Promise<InputData> => {\n    let tx = await provider.getTransaction(transactionHash)\n\n    //Function: deposit(address _token, uint256 _amount, string _reference)\n    let abi = ['deposit(address _token, uint256 _amount, string _reference)']\n\n    let iface = new ethers.utils.Interface(abi)\n\n    const transaction = iface.parseTransaction(tx)\n\n    const referenceString = transaction.args[2]\n\n    const inputData: InputData = {\n        reference: referenceString,\n        fromAddress: tx.from\n    }\n\n    return inputData\n}\n\nconst getFinances = async () => {\n    let transfers: Transfer[] = []\n\n    const result = await axios.get(FINANCES_ENDPOINT)\n\n    const data = result.data.result\n\n    // Don't show transfers from DAO, only incomming\n    const filtered = data.filter(function(log: any) {\n        return log.from !== DAO\n    })\n\n    const parsedTransfers: ParsedTransfer[] = filtered.map(function(log: any) {\n        var date = new Date(log.timeStamp * 1000)\n        var dateString = date.toLocaleDateString()\n\n        let wei = ethers.utils.bigNumberify(log.value)\n        const amount = ethers.utils.formatEther(wei) + ' ' + log.tokenSymbol\n\n        const transactionHash = log.hash\n\n        const parsed: ParsedTransfer = {\n            time: dateString,\n            amount: amount,\n            hash: transactionHash\n        }\n\n        return parsed\n    })\n\n    for (let parsed of parsedTransfers) {\n        let inputData = await getFinanceTransactions(parsed.hash)\n\n        const transfer: Transfer = {\n            time: parsed.time,\n            amount: parsed.amount,\n            reference: inputData.reference,\n            address: inputData.fromAddress\n        }\n\n        transfers.push(transfer)\n    }\n\n    return transfers\n}\n\nconst Finances: NextPage<{ finances: Transfer[] }> = ({ finances }) => {\n    const listItems = finances.map(finance => (\n        <li key={finance.address}>\n            {finance.time} -- {finance.address} -- {finance.amount} --\n            {finance.reference}\n        </li>\n    ))\n\n    return (\n        <div>\n            <Head>\n                <title>Finances</title>\n                <meta\n                    name=\"viewport\"\n                    content=\"initial-scale=1.0, width=device-width\"\n                />\n            </Head>\n            <h1>DAO FINANCES</h1>\n            <ul>{listItems}</ul>\n        </div>\n    )\n}\n\nFinances.getInitialProps = async ({ req }) => {\n    const finances = await getFinances()\n\n    return { finances }\n}\n\nexport default Finances\n","module.exports = require(\"axios\");","module.exports = require(\"ethers\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACvFA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAuBA;AAGA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC1IA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}